@import './variables.scss';
.button {
    &:hover:not([disabled]) {
        cursor: pointer;
    }
}

.button, .outlineButton, .arrowButton, .videoButton, .wideButton, .gradientButton {
    // font-size: 1.125rem;
    // border-radius: 31px;
    // border-radius: 10px;
    // padding: 1rem 1rem;
    // text-align: center;
    // line-height: 28px;
    // font-weight: 400;
    display: inline-block;
    font-weight: 350;
    font-family: $gothamFont;
    font-size: $bodyFontSize;
    line-height: 1rem;

    &:hover {
        background-color: $buttonBackgroundHoverColor;
        color: $buttonHoverColor;
    }

    strong {
        font-weight: 800;
    }
}

.button {
    background-color: $buttonBackgroundColor;
    transition: background-color 250ms;
    // padding-inline: 2.5rem;
    color: $buttonColor;
    padding: calc(map-get($margins, 1) * 0.85) calc(map-get($margins, 1) * 1.5);
    // min-width: 180px;
   
    // &.purpleButton {
    //     background-color: $purple;
    //     &:hover, &:focus {
    //         background-color: darken($purple, 10%);
    //     }
    // }
    &[disabled] {
        background-color: $blueFaded;
    }
}

.wideButton {
    width: 356px;
    max-width: 100%;
}

// .outlineButton {
//     border: 2px solid $outlineButtonColor;
//     color: $outlineButtonColor;
//     background-color: $outlineButtonBackgroundColor;
//     transition: background-color .3s;
//     padding: .875rem 2.375rem;
//     &:hover, &:focus {
//         color: $outlineButtonHoverColor;
//         background-color: $outlineButtonBackgroundHoverColor;
//         border-color: $outlineButtonBackgroundHoverColor;
//     }
// }

.outlineButton {
    background-color: transparent;
    border: 2px solid $greenLight;
    border-radius: 10px;
    padding: calc(map-get($margins, 1) * 0.75) calc(map-get($margins, 1) * 1.5);
    color: $outlineButtonColor;
    // font-weight: 350;
    // font-family: $gothamFont;
    // font-size: $bodyFontSize;
    text-transform: uppercase;
    box-sizing: border-box;

    

    &:hover, &:focus {
        background-color: $outlineButtonBackgroundHoverColor;
        color: $outlineButtonHoverColor;
    }

}

.arrowButton {
    padding: 1rem;
    border-radius: 5px;
    background-color: $arrowButtonBackgroundColor;
    cursor: pointer;
    transition: 250ms;

    &.right {
      svg {
        transform: rotate(180deg);
      }
    }
    &.topRight {
      svg {
        transform: rotate(135deg);
      }
    }

    &.brownBg {
      background-color: $brown;
    }

    
    &:hover {
        background-color: $arrowButtonBackgroundHoverColor;
    }

    svg {
        height: 0.5rem;
        color: $blue;
    }
}

.gradientButton {
    position: relative;
    padding: 0.75rem 2.5rem;
    border-radius: 5px;
    // background-color: teal;
    background: linear-gradient(141.66deg, rgb(238 238 238 / 20%) 0%, rgb(219 219 219 / 51%) 100%);
    color: $white;
    text-transform: uppercase;
    backdrop-filter: blur(5px);

    &:hover {
    background-color: $arrowButtonBackgroundHoverColor;
    }
}

.buttonSmall {
    min-width: 100px;
    font-size: 1rem;
    border-radius: 18px;
    padding: .25rem 1rem;
}

.videoButton {
    background-color: $videoButtonBackgroundColor;
    border: 2px solid $videoButtonColor;
    color: $videoButtonColor;
    padding: .875rem 2.5rem;
    transition: all .3s;
    &::before {
        content: '\f004';
        font-size: 1.25em;
        margin-right: .75rem;
        font-family: $iconFont;
    }
    &:hover, &:focus {
        background-color: $videoButtonBackgroundHoverColor;
        border-color: $videoButtonBackgroundColor;
        color: $videoButtonHoverColor;
    }
}

.darkBackground {
    .button, .wideButton {
        color: $buttonBackgroundColor;
        background-color: $buttonColor;
        &:hover, &:focus {
            color: $buttonHoverColor;
            background-color: $buttonBackgroundHoverColor;
        }
    }
    .arrowButton {
        color: $arrowButtonBackgroundColor;
        background-color: $arrowButtonColor;
        &:hover, &:focus {
            color: $arrowButtonHoverColor;
            background-color: $arrowButtonBackgroundHoverColor;
        }
    }
}

@include breakpoint(small only) {
    .button {
        padding: calc(map-get($margins, 1) * 0.5);
    }
}
