@import '@styles/variables.scss';
@import 'foundation-sites/scss/foundation.scss';

$smallTextBoxMargin: map-get($margins, 1);
$mediumTextBoxMargin: map-get($margins, 3);


.widgetBanner {
  position: relative;
  width: 100%;
  padding: 0 $desktopContentMargin;
  box-sizing: border-box;


  .container {
    position: relative;
    width: 100%;
    box-sizing: border-box;
    border-radius: 0 0 20px 20px;
    overflow: hidden;
    // padding-bottom: 55%; //To maintain aspect ratio
    //Maintaining aspect ratio causes the image to go past the bottom of the viewport on wide monitors. Using a height value instead so that the pinned links don't overlap the hero.
    height: calc(100vh - $desktopPinnedLinksHeight - 10px);
    
  }

  .bgImg, .bgVideo {
    position: absolute;
    inset: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: 50% 50%;
    z-index: -1;
  }

  .textBox {
    position: absolute;
    bottom: $mediumTextBoxMargin;
    display: inline-block;
    border-radius: 20px;
    // max-width: max(33rem, 35%);
    max-width: 33rem;
    padding: map-get($paddings, 2);
    background: linear-gradient(141.66deg, rgba(238,238,238,0.35) 0%, rgba(219,219,219,0.63) 100%);
    backdrop-filter: blur(5px);
    

    h1, h2 {
      font-family: $gothamFont;
      text-transform: uppercase;
      margin: 0;
    }

      h1 {
        font-weight: 800;
      }

      h2 {
        font-weight: 300;
      }

  }



  &.layoutLeftAligned {
    .textBox {
      left: $mediumTextBoxMargin;
    }
  }

  &.layoutRightAligned {
    .textBox {
      right: $mediumTextBoxMargin;
    } 
  }


  
  @include breakpoint(small only) {
    padding: 0 $mobileContentMargin;
    
    .container {
      // padding-bottom: 126%; //To maintain aspect ratio
      height: 55vh;
    }

    .bgImg {
      object-position: 64% 10%;
    }

    .textBox {
      bottom: calc($smallTextBoxMargin * 1.5);
      max-width: 18rem;
      padding: calc(map-get($paddings, 1) * 1.5);

      h2 {
        font-weight: 350;
      }
    }

    &.layoutLeftAligned {
      .textBox {
        left: $smallTextBoxMargin;
      }
    }
  
    &.layoutRightAligned {
      .textBox {
        right: $smallTextBoxMargin;
      } 
    }

  }

  

}